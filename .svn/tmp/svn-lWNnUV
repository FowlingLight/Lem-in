/*
** my.h for my in /home/b3nja13/Documents/svn/prog_elem/lem_in
** 
** Made by benjamin horiot
** Login   <horiot_b@epitech.net>
** 
** Started on  Tue Apr  2 15:58:50 2013 benjamin horiot
** Last update Wed Apr 24 11:03:13 2013 raphael morand
*/

#ifndef MY_H_
# define MY_H_

# include <stdlib.h>
# include <unistd.h>
# include "./lib/printf.h"

typedef struct s_info
{
  int			nb_fourmis;
  int			nb_nodes;
  char			buff[4097];
  char			line[200];
  char			tmp[200];
  int			len;
  struct s_nodes	*elem_ent;
  struct s_nodes	*elem_ext;
} t_info;

typedef struct s_graph
{
  int			**links;
  int			*paths;
  int			*done;
  int			*to_do;
  int			count_done;
  int			count_to_do;
  char			*entry;
  char			*exit;
} t_graph;

typedef struct s_nodes
{
  char			*name;
  int			status;
  int			x;
  int			y;
  int			free;
  struct s_nodes	*next;
} t_nodes;



/* aff.c */
void		my_puttab(int **, int);
void		end_link(t_info *, t_graph *);
void		my_showlist(t_info *, t_nodes *);

/* check_file.c */
void		put_error(char *);
int		check_ants(char *);
int		check_comment(char *);
int		check_comment_order(char *);
int		check_nodes_name(char *);
int		check_link_name(char *);
int		skip_comment_line(char *, int);

/* get_graph.c */
int		det_type(char *);
int		remp_tmp(t_info *, int);
void		get_nodes(t_info *, t_nodes **, int);
void		my_get_graph(t_info *, t_graph *, t_nodes *);

/* get_graph2.c */
void		remp_tab_links(t_info *, t_graph *);
t_nodes		*get_elem(char *, t_nodes *);
int		get_count(char *, t_nodes *);
void		get_link(t_info *, t_graph *, t_nodes *);

/* init.c */
int		my_get_next_line(t_info *, int);
void		my_malloc_all(t_info *, t_graph *);
void		count_nodes(t_info *);
int		main();

/* lem_in.c */
t_nodes		*look_for_name_entry(t_nodes *);
t_nodes		*look_for_name_exit(t_nodes *);
void		lem_in(t_info *, t_graph *, t_nodes *);
void		free_0(t_nodes *, int);
t_nodes		*get_node(t_graph *g, t_nodes *list, int a);

/* lem_in2.c */
int		*look_path(t_info *, t_graph *, t_nodes *, int);
int		get_nb_links(t_graph *, int);
int		check_finish(t_graph *, t_nodes *, int);

#endif /* !MY_H_ */
